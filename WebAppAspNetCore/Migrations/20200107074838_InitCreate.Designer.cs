// <auto-generated />
using System;
using EfCoreDbFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WebAppAspNetCore.Migrations
{
    [DbContext(typeof(SqlearnContext))]
    [Migration("20200107074838_InitCreate")]
    partial class InitCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCoreDbFirst.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(10);

                    b.Property<int?>("Teacherid")
                        .HasColumnName("teacherid");

                    b.HasKey("Id");

                    b.HasIndex("Teacherid");

                    b.ToTable("course");
                });

            modelBuilder.Entity("EfCoreDbFirst.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<decimal?>("Score")
                        .HasColumnName("score")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Studentid")
                        .HasColumnName("studentid");

                    b.HasKey("Id");

                    b.HasIndex("Courseid");

                    b.HasIndex("Studentid");

                    b.ToTable("store");
                });

            modelBuilder.Entity("EfCoreDbFirst.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fullname")
                        .HasColumnName("fullname")
                        .HasMaxLength(10);

                    b.Property<string>("Studentno")
                        .HasColumnName("studentno")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("student");
                });

            modelBuilder.Entity("EfCoreDbFirst.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("EfCoreDbFirst.Models.Course", b =>
                {
                    b.HasOne("EfCoreDbFirst.Models.Teacher", "Teacher")
                        .WithMany("Course")
                        .HasForeignKey("Teacherid")
                        .HasConstraintName("FK_course_teacher");
                });

            modelBuilder.Entity("EfCoreDbFirst.Models.Store", b =>
                {
                    b.HasOne("EfCoreDbFirst.Models.Course", "Course")
                        .WithMany("Store")
                        .HasForeignKey("Courseid")
                        .HasConstraintName("FK_store_course");

                    b.HasOne("EfCoreDbFirst.Models.Student", "Student")
                        .WithMany("Store")
                        .HasForeignKey("Studentid")
                        .HasConstraintName("FK_store_student");
                });
#pragma warning restore 612, 618
        }
    }
}
